name: EKS Terraform Deployment

on: 
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy infrastructure'
        required: true
        default: 'false'
        type: boolean

permissions:
      id-token: write   
      contents: read    
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./eks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::430118834478:role/gh-action-role
        aws-region: "eu-north-1"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.10.0'

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -no-color

    - name: Terraform Apply or Destroy
      run: |
        if [[ "${{ github.event.inputs.destroy }}" == "true" ]]; then
          echo "Destroying infrastructure..."
          terraform apply -auto-approve -destroy
        else
          echo "Applying infrastructure..."
          terraform apply -auto-approve
          sleep 15
          
          # Configure kubectl with cluster credentials
          echo "Configuring kubectl..."
          eval "$(terraform output -raw kubectl_config_command)"
          
          # Apply the aws-auth ConfigMap using the output command
          echo "Applying aws-auth ConfigMap..."
          eval "$(terraform output -raw apply_auth_config_cmd)"
          
          # Verify the ConfigMap was applied
          echo "Verifying aws-auth ConfigMap..."
          kubectl get configmap aws-auth -n kube-system -o yaml
          
          echo "EKS cluster deployment complete!"
        fi
